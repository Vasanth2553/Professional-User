---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: professional-db
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authgrpc-data
spec:
  resources:
    requests: 
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: professional-user-db
spec:
  selector:
    app: professional-user-db
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: professional-user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: professional-user-db
  template:
    metadata:
      labels:
        app: professional-user-db
    spec:
      containers:
      - name: professional-postgres
        image: postgres:15
        env:
          - name: POSTGRES_DB
            value: professional_db
          - name: POSTGRES_USER
            value: prouser
          - name: POSTGRES_PASSWORD
            value: Professional@123
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: professional-db
---
apiVersion: v1
kind: Service
metadata:
  name: authgrpc-user-data
spec:
  selector:
    app: authgrpc-user-data
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authgrpc-user-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authgrpc-user-data
  template:
    metadata:
      labels:
        app: authgrpc-user-data
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: userdb
            - name: POSTGRES_USER
              value: grpcauth_users
            - name: POSTGRES_PASSWORD
              value: grpc_password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: authgrpc-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: authgrpc-storage
          persistentVolumeClaim:
            claimName: authgrpc-data
---
apiVersion: v1
kind: Service
metadata:
  name: authgrpc-backend
spec:
  selector:
    app: authgrpc-backend
  ports:
  - port: 5003
    targetPort: 5003
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authgrpc-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authgrpc-backend
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: authgrpc-backend
          image: rohithkumars123/grpc_auth:v1
          ports:
            - containerPort: 5003
          env:
            - name: DB_HOST
              value: authgrpc-db
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: grpcauth_users
            - name: DB_PASS
              value: grpc_password
            - name: DB_NAME
              value: userdb
---
apiVersion: v1
kind: Service
metadata:
  name: professsional-service
spec:
  selector:
    app: professsional-service
  ports:
  - port: 8001
    targetPort: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: professsional-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: professsional-service
  template:
    metadata:
      labels:
        app: professsional-service
    spec:
      containers:
      - name: professsional-service
        image: <Image>
        ports:
        - containerPort: 8001
        env:
            - name: DB_HOST
              value: professional-user-db
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: prouser
            - name: DB_PASS
              value: Professional@123
            - name: DB_NAME
              value: professional_db



